#!/usr/bin/env maiascript

tries = 10

if (system.argc == 2) {
    tries = system.argv[1]
}

system.println("Testing the math functions " + tries + " times.")

system.println("math.sin...")
test (tries; 0.479426; 0.000001) { 
    math.sin(0.5)
} catch (v) {
    system.print("TEST: Fail testing function math.sin.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.cos...")
test (tries; 0.877583; 0.000001) { 
    math.cos(0.5)
} catch (v) {
    system.print("TEST: Fail testing function math.cos.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.tan...")
test (tries; 0.546302; 0.000001) { 
    math.tan(0.5)
} catch (v) {
    system.print("TEST: Fail testing function math.tan.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.asin...")
test (tries; 0.5; 0.000001) { 
    math.asin(0.479426)
} catch (v) {
    system.print("TEST: Fail testing function math.asin.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.acos...")
test (tries; 0.5; 0.000001) { 
    math.acos(0.877583)
} catch (v) {
    system.print("TEST: Fail testing function math.acos.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.atan...")
test (tries; 0.5; 0.000001) { 
    math.atan(0.546302)
} catch (v) {
    system.print("TEST: Fail testing function math.atan.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.atan2...")
test (tries; 0.785398; 0.000001) { 
    math.atan2(0.5, 0.5)
} catch (v) {
    system.print("TEST: Fail testing function math.atan2.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.sinh...")
test (tries; 0.521095; 0.000001) { 
    math.sinh(0.5)
} catch (v) {
    system.print("TEST: Fail testing function math.sinh.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.cosh...")
test (tries; 1.12763; 0.00001) { 
    math.cosh(0.5)
} catch (v) {
    system.print("TEST: Fail testing function math.cosh.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.tanh...")
test (tries; 0.462117; 0.000001) { 
    math.tanh(0.5)
} catch (v) {
    system.print("TEST: Fail testing function math.tanh.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.exp...")
test (tries; 2.71828; 0.00001) { 
    math.exp(1)
} catch (v) {
    system.print("TEST: Fail testing function math.exp.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.log...")
test (tries; 1; 0.00001) { 
    math.log(math.E)
} catch (v) {
    system.print("TEST: Fail testing function math.log.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.pow...")
test (tries; 8; 0) { 
    math.pow(2, 3)
} catch (v) {
    system.print("TEST: Fail testing function math.pow.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.sqrt...")
test (tries; 5; 0) { 
    math.sqrt(25)
} catch (v) {
    system.print("TEST: Fail testing function math.sqrt.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.ceil...")
test (tries; 2; 0) { 
    math.ceil(1.5)
} catch (v) {
    system.print("TEST: Fail testing function math.ceil.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.floor...")
test (tries; 1; 0) { 
    math.floor(1.5)
} catch (v) {
    system.print("TEST: Fail testing function math.floor.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.round...")
test (tries; 1; 0) { 
    math.round(1.45)
} catch (v) {
    system.print("TEST: Fail testing function math.round.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.abs...")
test (tries; 2.5; 0) { 
    math.abs(-2.5)
} catch (v) {
    system.print("TEST: Fail testing function math.abs.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.random...")
test (tries; 10; 10) { 
    10 * math.random()
} catch (v) {
    system.print("TEST: Fail testing function math.random.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.min...")
test (tries; 2; 0) { 
    math.min(2, 3)
} catch (v) {
    system.print("TEST: Fail testing function math.min.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}

system.println("math.max...")
test (tries; 3; 0) { 
    math.max(2, 3)
} catch (v) {
    system.print("TEST: Fail testing function math.max.")
    system.print("      Expected result " + core.testResult.expected)
    system.print("      But got " + core.testResult.obtained)
}
